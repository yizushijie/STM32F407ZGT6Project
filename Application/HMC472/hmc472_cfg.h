#ifndef HMC472_CFG_H_
#define HMC472_CFG_H_
//////////////////////////////////////////////////////////////////////////////////////
#ifdef __cplusplus
extern "C" {
#endif
	//////////////////////////////////////////////////////////////////////////////////////
	#include "complier_lib.h"
	#include "gpio_task.h"
	#include "delay_task.h"
	//////////////////////////////////////////////////////////////////////////////////////
	//===HMC472控制总线,设置为开漏输出
	#define HMC472_BUS_PORT								GPIOC
	#define HMC472_BUS_BITS								( LL_GPIO_PIN_7|LL_GPIO_PIN_8|LL_GPIO_PIN_9|LL_GPIO_PIN_10|LL_GPIO_PIN_11|LL_GPIO_PIN_12)
	#define HMC472_BUS_MASK								0xE07F
	#define HMC472_BUS_OUT(val)							HMC472_DataBus(val)//( HMC472_BUS_PORT->ODR=(HMC472_BUS_PORT->ODR&HMC472_BUS_MASK)|(((UINT32_T)val<<7)&HMC472_BUS_BITS) )
	
	//===V1
	#define HMC472_V1_PORT								GPIOC
	#define HMC472_V1_BIT								LL_GPIO_PIN_7
	#define HMC472_V1_WRITE								GPIO_SET_WRITE(	HMC472_V1_PORT,HMC472_V1_BIT )
	#define HMC472_V1_READ								GPIO_SET_READ(	HMC472_V1_PORT,HMC472_V1_BIT )
	#define HMC472_V1_STATE								GPIO_GET_STATE(	HMC472_V1_PORT,HMC472_V1_BIT )
	#define HMC472_V1_OUT_0								( GPIO_OUT_0(	HMC472_V1_PORT,HMC472_V1_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V1_OUT_1								( GPIO_OUT_1(	HMC472_V1_PORT,HMC472_V1_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V1_OUT_C								( GPIO_OUT_C(	HMC472_V1_PORT,HMC472_V1_BIT ),DelayTask_ClkNop(5))

	//===V2
	#define HMC472_V2_PORT								GPIOC
	#define HMC472_V2_BIT								LL_GPIO_PIN_8
	#define HMC472_V2_WRITE								GPIO_SET_WRITE(	HMC472_V2_PORT,HMC472_V2_BIT )
	#define HMC472_V2_READ								GPIO_SET_READ(	HMC472_V2_PORT,HMC472_V2_BIT )
	#define HMC472_V2_STATE								GPIO_GET_STATE(	HMC472_V2_PORT,HMC472_V2_BIT )
	#define HMC472_V2_OUT_0								( GPIO_OUT_0(	HMC472_V2_PORT,HMC472_V2_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V2_OUT_1								( GPIO_OUT_1(	HMC472_V2_PORT,HMC472_V2_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V2_OUT_C								( GPIO_OUT_C(	HMC472_V2_PORT,HMC472_V2_BIT ),DelayTask_ClkNop(5))

	//===V3
	#define HMC472_V3_PORT								GPIOC
	#define HMC472_V3_BIT								LL_GPIO_PIN_9
	#define HMC472_V3_WRITE								GPIO_SET_WRITE(	HMC472_V3_PORT,HMC472_V3_BIT )
	#define HMC472_V3_READ								GPIO_SET_READ(	HMC472_V3_PORT,HMC472_V3_BIT )
	#define HMC472_V3_STATE								GPIO_GET_STATE(	HMC472_V3_PORT,HMC472_V3_BIT )
	#define HMC472_V3_OUT_0								( GPIO_OUT_0(	HMC472_V3_PORT,HMC472_V3_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V3_OUT_1								( GPIO_OUT_1(	HMC472_V3_PORT,HMC472_V3_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V3_OUT_C								( GPIO_OUT_C(	HMC472_V3_PORT,HMC472_V3_BIT ),DelayTask_ClkNop(5))

	//===V4
	#define HMC472_V4_PORT								GPIOC
	#define HMC472_V4_BIT								LL_GPIO_PIN_10
	#define HMC472_V4_WRITE								GPIO_SET_WRITE(	HMC472_V4_PORT,HMC472_V4_BIT )
	#define HMC472_V4_READ								GPIO_SET_READ(	HMC472_V4_PORT,HMC472_V4_BIT )
	#define HMC472_V4_STATE								GPIO_GET_STATE(	HMC472_V4_PORT,HMC472_V4_BIT )
	#define HMC472_V4_OUT_0								( GPIO_OUT_0(	HMC472_V4_PORT,HMC472_V4_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V4_OUT_1								( GPIO_OUT_1(	HMC472_V4_PORT,HMC472_V4_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V4_OUT_C								( GPIO_OUT_C(	HMC472_V4_PORT,HMC472_V4_BIT ),DelayTask_ClkNop(5))

	//===V5
	#define HMC472_V5_PORT								GPIOC
	#define HMC472_V5_BIT								LL_GPIO_PIN_11
	#define HMC472_V5_WRITE								GPIO_SET_WRITE(	HMC472_V5_PORT,HMC472_V5_BIT )
	#define HMC472_V5_READ								GPIO_SET_READ(	HMC472_V5_PORT,HMC472_V5_BIT )
	#define HMC472_V5_STATE								GPIO_GET_STATE(	HMC472_V5_PORT,HMC472_V5_BIT )
	#define HMC472_V5_OUT_0								( GPIO_OUT_0(	HMC472_V5_PORT,HMC472_V5_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V5_OUT_1								( GPIO_OUT_1(	HMC472_V5_PORT,HMC472_V5_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V5_OUT_C								( GPIO_OUT_C(	HMC472_V5_PORT,HMC472_V5_BIT ),DelayTask_ClkNop(5))

	//===V6
	#define HMC472_V6_PORT								GPIOC
	#define HMC472_V6_BIT								LL_GPIO_PIN_12
	#define HMC472_V6_WRITE								GPIO_SET_WRITE(	HMC472_V6_PORT,HMC472_V6_BIT )
	#define HMC472_V6_READ								GPIO_SET_READ(	HMC472_V6_PORT,HMC472_V6_BIT )
	#define HMC472_V6_STATE								GPIO_GET_STATE(	HMC472_V6_PORT,HMC472_V6_BIT )
	#define HMC472_V6_OUT_0								( GPIO_OUT_0(	HMC472_V6_PORT,HMC472_V6_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V6_OUT_1								( GPIO_OUT_1(	HMC472_V6_PORT,HMC472_V6_BIT ),DelayTask_ClkNop(5))
	#define HMC472_V6_OUT_C								( GPIO_OUT_C(	HMC472_V6_PORT,HMC472_V6_BIT ),DelayTask_ClkNop(5))

	//===433M,小信号使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_GENA_PORT							GPIOB
	#define HMC472_GENA_BIT								LL_GPIO_PIN_3
	#define HMC472_GENA_WRITE							GPIO_SET_WRITE(	HMC472_GENA_PORT,HMC472_GENA_BIT )
	#define HMC472_GENA_READ							GPIO_SET_READ(	HMC472_GENA_PORT,HMC472_GENA_BIT )
	#define HMC472_GENA_STATE							GPIO_GET_STATE(	HMC472_GENA_PORT,HMC472_GENA_BIT )
	#define HMC472_GENA_OUT_0							( GPIO_OUT_0(	HMC472_GENA_PORT,HMC472_GENA_BIT ),DelayTask_ClkNop(5))
	#define HMC472_GENA_OUT_1							( GPIO_OUT_1(	HMC472_GENA_PORT,HMC472_GENA_BIT ),DelayTask_ClkNop(5))
	#define HMC472_GENA_OUT_C							( GPIO_OUT_C(	HMC472_GENA_PORT,HMC472_GENA_BIT ),DelayTask_ClkNop(5))

	#define H74C573_GENA_LATCH_ENABLE					HMC472_GENA_OUT_1
	#define H74C573_GENA_LATCH_DISABLE					HMC472_GENA_OUT_0

	//===433M,大信号使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_GENB_PORT							GPIOB
	#define HMC472_GENB_BIT								LL_GPIO_PIN_4
	#define HMC472_GENB_WRITE							GPIO_SET_WRITE(	HMC472_GENB_PORT,HMC472_GENB_BIT )
	#define HMC472_GENB_READ							GPIO_SET_READ(	HMC472_GENB_PORT,HMC472_GENB_BIT )
	#define HMC472_GENB_STATE							GPIO_GET_STATE(	HMC472_GENB_PORT,HMC472_GENB_BIT )
	#define HMC472_GENB_OUT_0							( GPIO_OUT_0(	HMC472_GENB_PORT,HMC472_GENB_BIT ),DelayTask_ClkNop(5))
	#define HMC472_GENB_OUT_1							( GPIO_OUT_1(	HMC472_GENB_PORT,HMC472_GENB_BIT ),DelayTask_ClkNop(5))
	#define HMC472_GENB_OUT_C							( GPIO_OUT_C(	HMC472_GENB_PORT,HMC472_GENB_BIT ),DelayTask_ClkNop(5))


	#define H74C573_GENB_LATCH_ENABLE					HMC472_GENB_OUT_1
	#define H74C573_GENB_LATCH_DISABLE					HMC472_GENB_OUT_0

	//===315M,信号使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_GENC_PORT							GPIOC
	#define HMC472_GENC_BIT								LL_GPIO_PIN_4
	#define HMC472_GENC_WRITE							GPIO_SET_WRITE(	HMC472_GENC_PORT,HMC472_GENC_BIT )
	#define HMC472_GENC_READ							GPIO_SET_READ(	HMC472_GENC_PORT,HMC472_GENC_BIT )
	#define HMC472_GENC_STATE							GPIO_GET_STATE(	HMC472_GENC_PORT,HMC472_GENC_BIT )
	#define HMC472_GENC_OUT_0							( GPIO_OUT_0(	HMC472_GENC_PORT,HMC472_GENC_BIT ),DelayTask_ClkNop(5))
	#define HMC472_GENC_OUT_1							( GPIO_OUT_1(	HMC472_GENC_PORT,HMC472_GENC_BIT ),DelayTask_ClkNop(5))
	#define HMC472_GENC_OUT_C							( GPIO_OUT_C(	HMC472_GENC_PORT,HMC472_GENC_BIT ),DelayTask_ClkNop(5))

	#define H74C573_GENC_LATCH_ENABLE					HMC472_GENC_OUT_1
	#define H74C573_GENC_LATCH_DISABLE					HMC472_GENC_OUT_0

	//===2xxM,信号使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_GEND_PORT							GPIOA
	#define HMC472_GEND_BIT								LL_GPIO_PIN_4
	#define HMC472_GEND_WRITE							GPIO_SET_WRITE(	HMC472_GEND_PORT,HMC472_GEND_BIT )
	#define HMC472_GEND_READ							GPIO_SET_READ(	HMC472_GEND_PORT,HMC472_GEND_BIT )
	#define HMC472_GEND_STATE							GPIO_GET_STATE(	HMC472_GEND_PORT,HMC472_GEND_BIT )
	#define HMC472_GEND_OUT_0							( GPIO_OUT_0(	HMC472_GEND_PORT,HMC472_GEND_BIT ),DelayTask_ClkNop(5))
	#define HMC472_GEND_OUT_1							( GPIO_OUT_1(	HMC472_GEND_PORT,HMC472_GEND_BIT ),DelayTask_ClkNop(5))
	#define HMC472_GEND_OUT_C							( GPIO_OUT_C(	HMC472_GEND_PORT,HMC472_GEND_BIT ),DelayTask_ClkNop(5))

	#define H74C573_GEND_LATCH_ENABLE					HMC472_GEND_OUT_1
	#define H74C573_GEND_LATCH_DISABLE					HMC472_GEND_OUT_0

	//===信号源A使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_RFA_PORT								GPIOB
	#define HMC472_RFA_BIT								LL_GPIO_PIN_8
	#define HMC472_RFA_WRITE							GPIO_SET_WRITE(	HMC472_RFA_PORT,HMC472_RFA_BIT )
	#define HMC472_RFA_READ								GPIO_SET_READ(	HMC472_RFA_PORT,HMC472_RFA_BIT )
	#define HMC472_RFA_STATE							GPIO_GET_STATE(	HMC472_RFA_PORT,HMC472_RFA_BIT )
	#define HMC472_RFA_OUT_0							( GPIO_OUT_0(	HMC472_RFA_PORT,HMC472_RFA_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFA_OUT_1							( GPIO_OUT_1(	HMC472_RFA_PORT,HMC472_RFA_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFA_OUT_C							( GPIO_OUT_C(	HMC472_RFA_PORT,HMC472_RFA_BIT ),DelayTask_ClkNop(5))


	#define H74C573_RFA_LATCH_ENABLE					HMC472_RFA_OUT_1
	#define H74C573_RFA_LATCH_DISABLE					HMC472_RFA_OUT_0

	//===信号源B使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_RFB_PORT								GPIOB
	#define HMC472_RFB_BIT								LL_GPIO_PIN_9
	#define HMC472_RFB_WRITE							GPIO_SET_WRITE(	HMC472_RFB_PORT,HMC472_RFB_BIT )
	#define HMC472_RFB_READ								GPIO_SET_READ(	HMC472_RFB_PORT,HMC472_RFB_BIT )
	#define HMC472_RFB_STATE							GPIO_GET_STATE(	HMC472_RFB_PORT,HMC472_RFB_BIT )
	#define HMC472_RFB_OUT_0							( GPIO_OUT_0(	HMC472_RFB_PORT,HMC472_RFB_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFB_OUT_1							( GPIO_OUT_1(	HMC472_RFB_PORT,HMC472_RFB_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFB_OUT_C							( GPIO_OUT_C(	HMC472_RFB_PORT,HMC472_RFB_BIT ),DelayTask_ClkNop(5))

	#define H74C573_RFB_LATCH_ENABLE					HMC472_RFB_OUT_1
	#define H74C573_RFB_LATCH_DISABLE					HMC472_RFB_OUT_0

	//===信号源C使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_RFC_PORT								GPIOA
	#define HMC472_RFC_BIT								LL_GPIO_PIN_15
	#define HMC472_RFC_WRITE							GPIO_SET_WRITE(	HMC472_RFC_PORT,HMC472_RFC_BIT )
	#define HMC472_RFC_READ								GPIO_SET_READ(	HMC472_RFC_PORT,HMC472_RFC_BIT )
	#define HMC472_RFC_STATE							GPIO_GET_STATE(	HMC472_RFC_PORT,HMC472_RFC_BIT )
	#define HMC472_RFC_OUT_0							( GPIO_OUT_0(	HMC472_RFC_PORT,HMC472_RFC_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFC_OUT_1							( GPIO_OUT_1(	HMC472_RFC_PORT,HMC472_RFC_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFC_OUT_C							( GPIO_OUT_C(	HMC472_RFC_PORT,HMC472_RFC_BIT ),DelayTask_ClkNop(5))


	#define H74C573_RFC_LATCH_ENABLE					HMC472_RFC_OUT_1
	#define H74C573_RFC_LATCH_DISABLE					HMC472_RFC_OUT_0

	//===信号源D使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_RFD_PORT								GPIOA
	#define HMC472_RFD_BIT								LL_GPIO_PIN_12
	#define HMC472_RFD_WRITE							GPIO_SET_WRITE(	HMC472_RFD_PORT,HMC472_RFD_BIT )
	#define HMC472_RFD_READ								GPIO_SET_READ(	HMC472_RFD_PORT,HMC472_RFD_BIT )
	#define HMC472_RFD_STATE							GPIO_GET_STATE(	HMC472_RFD_PORT,HMC472_RFD_BIT )
	#define HMC472_RFD_OUT_0							( GPIO_OUT_0(	HMC472_RFD_PORT,HMC472_RFD_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFD_OUT_1							( GPIO_OUT_1(	HMC472_RFD_PORT,HMC472_RFD_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFD_OUT_C							( GPIO_OUT_C(	HMC472_RFD_PORT,HMC472_RFD_BIT ),DelayTask_ClkNop(5))

	#define H74C573_RFD_LATCH_ENABLE					HMC472_RFD_OUT_1
	#define H74C573_RFD_LATCH_DISABLE					HMC472_RFD_OUT_0

	//===信号源E使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_RFE_PORT								GPIOA
	#define HMC472_RFE_BIT								LL_GPIO_PIN_11
	#define HMC472_RFE_WRITE							GPIO_SET_WRITE(	HMC472_RFE_PORT,HMC472_RFE_BIT )
	#define HMC472_RFE_READ								GPIO_SET_READ(	HMC472_RFE_PORT,HMC472_RFE_BIT )
	#define HMC472_RFE_STATE							GPIO_GET_STATE(	HMC472_RFE_PORT,HMC472_RFE_BIT )
	#define HMC472_RFE_OUT_0							( GPIO_OUT_0(	HMC472_RFE_PORT,HMC472_RFE_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFE_OUT_1							( GPIO_OUT_1(	HMC472_RFE_PORT,HMC472_RFE_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFE_OUT_C							( GPIO_OUT_C(	HMC472_RFE_PORT,HMC472_RFE_BIT ),DelayTask_ClkNop(5))

	#define H74C573_RFE_LATCH_ENABLE					HMC472_RFE_OUT_1
	#define H74C573_RFE_LATCH_DISABLE					HMC472_RFE_OUT_0

	//===信号源F使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_RFF_PORT								GPIOA
	#define HMC472_RFF_BIT								LL_GPIO_PIN_7
	#define HMC472_RFF_WRITE							GPIO_SET_WRITE(	HMC472_RFF_PORT,HMC472_RFF_BIT )
	#define HMC472_RFF_READ								GPIO_SET_READ(	HMC472_RFF_PORT,HMC472_RFF_BIT )
	#define HMC472_RFF_STATE							GPIO_GET_STATE(	HMC472_RFF_PORT,HMC472_RFF_BIT )
	#define HMC472_RFF_OUT_0							( GPIO_OUT_0(	HMC472_RFF_PORT,HMC472_RFF_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFF_OUT_1							( GPIO_OUT_1(	HMC472_RFF_PORT,HMC472_RFF_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFF_OUT_C							( GPIO_OUT_C(	HMC472_RFF_PORT,HMC472_RFF_BIT ),DelayTask_ClkNop(5))

	#define H74C573_RFF_LATCH_ENABLE					HMC472_RFF_OUT_1
	#define H74C573_RFF_LATCH_DISABLE					HMC472_RFF_OUT_0

	//===信号源G使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_RFG_PORT								GPIOA
	#define HMC472_RFG_BIT								LL_GPIO_PIN_6
	#define HMC472_RFG_WRITE							GPIO_SET_WRITE(	HMC472_RFG_PORT,HMC472_RFG_BIT )
	#define HMC472_RFG_READ								GPIO_SET_READ(	HMC472_RFG_PORT,HMC472_RFG_BIT )
	#define HMC472_RFG_STATE							GPIO_GET_STATE(	HMC472_RFG_PORT,HMC472_RFG_BIT )
	#define HMC472_RFG_OUT_0							( GPIO_OUT_0(	HMC472_RFG_PORT,HMC472_RFG_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFG_OUT_1							( GPIO_OUT_1(	HMC472_RFG_PORT,HMC472_RFG_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFG_OUT_C							( GPIO_OUT_C(	HMC472_RFG_PORT,HMC472_RFG_BIT ),DelayTask_ClkNop(5))

	#define H74C573_RFG_LATCH_ENABLE					HMC472_RFG_OUT_1
	#define H74C573_RFG_LATCH_DISABLE					HMC472_RFG_OUT_0

	//===信号源H使能端,设置推挽输出，74HC573高电平锁存数据
	#define HMC472_RFH_PORT								GPIOA
	#define HMC472_RFH_BIT								LL_GPIO_PIN_5
	#define HMC472_RFH_WRITE							GPIO_SET_WRITE(	HMC472_RFH_PORT,HMC472_RFH_BIT )
	#define HMC472_RFH_READ								GPIO_SET_READ(	HMC472_RFH_PORT,HMC472_RFH_BIT )
	#define HMC472_RFH_STATE							GPIO_GET_STATE(	HMC472_RFH_PORT,HMC472_RFH_BIT )
	#define HMC472_RFH_OUT_0							( GPIO_OUT_0(	HMC472_RFH_PORT,HMC472_RFH_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFH_OUT_1							( GPIO_OUT_1(	HMC472_RFH_PORT,HMC472_RFH_BIT ),DelayTask_ClkNop(5))
	#define HMC472_RFH_OUT_C							( GPIO_OUT_C(	HMC472_RFH_PORT,HMC472_RFH_BIT ),DelayTask_ClkNop(5))

	#define H74C573_RFH_LATCH_ENABLE					HMC472_RFH_OUT_1
	#define H74C573_RFH_LATCH_DISABLE					HMC472_RFH_OUT_0

	#define H74C573_GEN_LATCH_DISABLE					( H74C573_GENA_LATCH_DISABLE,H74C573_GENB_LATCH_DISABLE,H74C573_GENC_LATCH_DISABLE,H74C573_GEND_LATCH_DISABLE )
	
	#define H74C573_RF_LATCH_DISABLE					( H74C573_RFA_LATCH_DISABLE,H74C573_RFB_LATCH_DISABLE,H74C573_RFC_LATCH_DISABLE,H74C573_RFD_LATCH_DISABLE,\
														  H74C573_RFE_LATCH_DISABLE,H74C573_RFF_LATCH_DISABLE,H74C573_RFG_LATCH_DISABLE,H74C573_RFH_LATCH_DISABLE	)

	#define H74C573_RF_LATCH_ENABLE						( H74C573_RFA_LATCH_ENABLE,H74C573_RFB_LATCH_ENABLE,H74C573_RFC_LATCH_ENABLE,H74C573_RFD_LATCH_ENABLE,\
														  H74C573_RFE_LATCH_ENABLE,H74C573_RFF_LATCH_ENABLE,H74C573_RFG_LATCH_ENABLE,H74C573_RFH_LATCH_ENABLE	)

	#define H74C573_LATCH_DISABLE						( H74C573_GEN_LATCH_DISABLE,H74C573_RF_LATCH_DISABLE )


	//===HMC472的输出功率的衰减等级（放大10的结果，最小是0.5DBMm，最大是31.5DBMm，步进是0.5DBMm）
	typedef enum
	{
		HMC472_NONE_DBM = 0,
		HMC472_05_DBM	= 1,
		HMC472_10_DBM	= 2,
		HMC472_15_DBM	= 3,
		HMC472_20_DBM	= 4,
		HMC472_25_DBM	= 5,
		HMC472_30_DBM	= 6,
		HMC472_35_DBM	= 7,
		HMC472_40_DBM	= 8,
		HMC472_45_DBM	= 9,
		HMC472_50_DBM	= 10,
		HMC472_55_DBM	= 11,
		HMC472_60_DBM	= 12,
		HMC472_65_DBM	= 13,
		HMC472_70_DBM	= 14,
		HMC472_75_DBM	= 15,
		HMC472_80_DBM	= 16,
		HMC472_85_DBM	= 17,
		HMC472_90_DBM	= 18,
		HMC472_95_DBM	= 19,
		HMC472_100_DBM	= 20,
		HMC472_105_DBM	= 21,
		HMC472_110_DBM	= 22,
		HMC472_115_DBM	= 23,
		HMC472_120_DBM	= 24,
		HMC472_125_DBM	= 25,
		HMC472_130_DBM	= 26,
		HMC472_135_DBM	= 27,
		HMC472_140_DBM	= 28,
		HMC472_145_DBM	= 29,
		HMC472_150_DBM	= 30,
		HMC472_155_DBM	= 31,
		HMC472_160_DBM	= 32,
		HMC472_165_DBM	= 33,
		HMC472_170_DBM	= 34,
		HMC472_175_DBM	= 35,
		HMC472_180_DBM	= 36,
		HMC472_185_DBM	= 37,
		HMC472_190_DBM	= 38,
		HMC472_195_DBM	= 39,
		HMC472_200_DBM	= 40,
		HMC472_205_DBM	= 41,
		HMC472_210_DBM	= 42,
		HMC472_215_DBM	= 43,
		HMC472_220_DBM	= 44,
		HMC472_225_DBM	= 45,
		HMC472_230_DBM	= 46,
		HMC472_235_DBM	= 47,
		HMC472_240_DBM	= 48,
		HMC472_245_DBM	= 49,
		HMC472_250_DBM	= 50,
		HMC472_255_DBM	= 51,
		HMC472_260_DBM	= 52,
		HMC472_265_DBM	= 53,
		HMC472_270_DBM	= 54,
		HMC472_275_DBM	= 55,
		HMC472_280_DBM	= 56,
		HMC472_285_DBM	= 57,
		HMC472_290_DBM	= 58,
		HMC472_295_DBM	= 59,
		HMC472_300_DBM	= 60,
		HMC472_305_DBM	= 61,
		HMC472_310_DBM	= 62,
		HMC472_315_DBM	= 63,
	}HMC472_DBM;

	//===控制信号源的输出衰减
	typedef enum
	{
		HMC472_GEN_NONE = 0,
		HMC472_GEN_CHA  = 1,
		HMC472_GEN_CHB  = 2,
		HMC472_GEN_CHC  = 3,
		HMC472_GEN_CHD  = 4,
	}HMC472_GEN;

	//===控制RF输出衰减
	typedef enum
	{
		HMC472_RF_NONE	= 0,
		HMC472_RF_CHA	= 1,
		HMC472_RF_CHB	= 2,
		HMC472_RF_CHC	= 3,
		HMC472_RF_CHD	= 4,
		HMC472_RF_CHE	= 5,
		HMC472_RF_CHF	= 6,
		HMC472_RF_CHG	= 7,
		HMC472_RF_CHH	= 8,
	}HMC472_RF;

	//===默认信号源的功率
	#define HMC472_GEN_CHA_DBM			433			//433M---小信号源
	#define HMC472_GEN_CHB_DBM			488			//315M---信号源
	#define HMC472_GEN_CHC_DBM			315			//433M---大信号源
	#define HMC472_GEN_CHD_DBM			230			//230M---信号源

	//===HMC472的传输子命令
	typedef enum 
	{
		CMD_HMC472_READ_CHA			= 1,		//---读取CHA信号源的输出功率
		CMD_HMC472_WRITE_CHA		= 2,		//---修改CHA信号源的输出功率
		CMD_HMC472_READ_CHB			= 3,		//---读取CHB信号源的输出功率
		CMD_HMC472_WRITE_CHB		= 4,		//---修改CHB信号源的输出功率
		CMD_HMC472_READ_CHC			= 5,		//---读取CHC信号源的输出功率
		CMD_HMC472_WRITE_CHC		= 6,		//---修改CHC信号源的输出功率
		CMD_HMC472_READ_CHD			= 7,		//---读取CHD信号源的输出功率
		CMD_HMC472_WRITE_CHD		= 8,		//---修改CHD信号源的输出功率

		CMD_HMC472_READ_GEN_CHA		= 9,		//---读取CHA信号源的衰减功率
		CMD_HMC472_WRITE_GEN_CHA	= 10,		//---修改CHA信号源的衰减功率
		CMD_HMC472_READ_GEN_CHB		= 11,		//---读取CHB信号源的衰减功率
		CMD_HMC472_WRITE_GEN_CHB	= 12,		//---修改CHB信号源的衰减功率
		CMD_HMC472_READ_GEN_CHC		= 13,		//---读取CHC信号源的衰减功率
		CMD_HMC472_WRITE_GEN_CHC	= 14,		//---修改CHC信号源的衰减功率
		CMD_HMC472_READ_GEN_CHD		= 15,		//---读取CHD信号源的衰减功率
		CMD_HMC472_WRITE_GEN_CHD	= 16,		//---修改CHD信号源的衰减功率


		CMD_HMC472_READ_RF_CHA		= 17,		//---读取CHA的RF的输出功率
		CMD_HMC472_WRITE_RF_CHA		= 18,		//---修改CHA的RF的输出功率
		CMD_HMC472_READ_RF_CHB		= 19,		//---读取CHB的RF的输出功率
		CMD_HMC472_WRITE_RF_CHB		= 20,		//---修改CHB的RF的输出功率
		CMD_HMC472_READ_RF_CHC		= 21,		//---读取CHC的RF的输出功率
		CMD_HMC472_WRITE_RF_CHC		= 22,		//---修改CHC的RF的输出功率
		CMD_HMC472_READ_RF_CHD		= 23,		//---读取CHD的RF的输出功率
		CMD_HMC472_WRITE_RF_CHD		= 24,		//---修改CHD的RF的输出功率

		CMD_HMC472_READ_RF_CHE		= 25,		//---读取CHA的RF的衰减功率
		CMD_HMC472_WRITE_RF_CHE		= 26,		//---修改CHA的RF的衰减功率
		CMD_HMC472_READ_RF_CHF		= 27,		//---读取CHB的RF的衰减功率
		CMD_HMC472_WRITE_RF_CHF		= 28,		//---修改CHB的RF的衰减功率
		CMD_HMC472_READ_RF_CHG		= 29,		//---读取CHC的RF的衰减功率
		CMD_HMC472_WRITE_RF_CHG		= 30,		//---修改CHC的RF的衰减功率
		CMD_HMC472_READ_RF_CHH		= 31,		//---读取CHD的RF的衰减功率
		CMD_HMC472_WRITE_RF_CHH		= 32,		//---修改CHD的RF的衰减功率

		CMD_HMC472_READ_GEN_RF		= 33,		//---读取RF通道的功率输出值
		CMD_HMC472_WRITE_GEN_RF		= 34,		//---修改RF通道的功率输出值

	}CMD_HMC472_MENU;
	
	//===HMC472控制的主命令
	#define CMD_HMC472							0xA0
	
	//===软件版本	
	#define HMC472_GEN_VERSION					"0.0.1"
	#define HMC472_GEN_VERSION_SIZE				(sizeof(HMC472_GEN_VERSION)-1)

	//////////////////////////////////////////////////////////////////////////////////////

	//===外部调用接口
	extern VLTUINT8_T g_RFGendBmA;
	extern VLTUINT8_T g_RFGendBmB;
	extern VLTUINT8_T g_RFGendBmC;
	extern VLTUINT8_T g_RFGendBmD;

	//===函数定义
	void HMC472_GPIO_Init( void );
	void HMC472_Init( void );
	void HMC472_DataBus( UINT8_T val );
	void HMC472_SetGain( UINT8_T val );
	UINT8_T HMC472_SetGenGain( UINT8_T genCh, UINT8_T gainVal );
	UINT8_T HMC472_SetRFGain( UINT8_T rfCH, UINT8_T gainVal );
	UINT16_T HMC472_ReadGen( UINT8_T genCH );
	UINT8_T  HMC472_SetGen(UINT8_T genCH, UINT16_T genVal );
	UINT16_T HMC472_ReadHMC472Gen( UINT8_T genCH );
	UINT16_T HMC472_ReadHMC472RF( UINT8_T rfCH );
	UINT16_T HMC472_ReadRFGen( UINT8_T genCH, UINT8_T rfCH );
	UINT8_T	 HMC472_SetRFGen( UINT8_T genCH, UINT8_T rfCH, UINT16_T rfGenPower );
	UINT8_T	 HMC472_GetVersion( UINT8_T *pVersion,UINT8_T length );

	//////////////////////////////////////////////////////////////////////////////////////
#ifdef __cplusplus
}
#endif
//////////////////////////////////////////////////////////////////////////////////////
#endif /*HMC472_CFG_H_ */